name: Release binaries

on:
  workflow_dispatch:

jobs:
  update-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: CheckBranch
        run: |
          echo "Checking branch"
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "This workflow can only run on the main branch."
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Update Go modules
        run: |
          echo "Updating Go modules"
          go get -u ./...
          go mod tidy

      - name: Run Go tests
        run: |
          echo "Running Go tests"
          go test ./... -v

      - name: Run Go vet
        run: |
          echo "Running Go vet"
          go vet ./...
    
      - name: Increment tag if needed (main branch only)
        run: |
          go run .cmd/cicd-utilities git-increment-tag --tag-prefix "v" --tag-branch "main" --tag-commit "HEAD" --tag-version-file ".github/tag-version.txt"
  
  build:
    runs-on: ubuntu-latest
    needs: update-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Get build environment
        id: build-env
        run: |
          echo "Parsing build environment"
          BUILD_ENV=$(go run .cmd/cicd-utilities get-build-env)
          eval $BUILD_ENV
          set | grep BUILD

      - name: Build binaries
        run: |
          echo "Building binaries without dependencies"
          set | grep BUILD
          rm -rf dist
          mkdir -p dist
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/cicd-utilities-amd64 ./cmd/cicd-utilities
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -ldflags="-s -w" -o dist/cicd-utilities-arm64 ./cmd/cicd-utilities

      - name: Compress binaries
        run: |
          echo "Compressing binaries"
          set | grep BUILD
          go run .cmd/cicd-utilities compress-binaries \
            --replace \
            --format zip
            dist/cicd-utilities-amd64 \
            dist/cicd-utilities-arm64

      - name: Checksum
        run: |
          echo "Calculating checksum"
          go run .cmd/cicd-utilities checksum \
            --combined-file dist/checksums.txt \
            --algorithm sha256 \
            dist/cicd-utilities-*.zip 

      - name: Create draft release
        run: |
          echo "Creating draft release"
          go run .cmd/cicd-utilities create-release \
            --tag "$(cat .github/tag-version.txt)" \
            --name "Release $(cat .github/tag-version.txt)" \
            --draft \
            --body "#TODO create body" \
            --files dist/cicd-utilities-*.zip           
        env:
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}